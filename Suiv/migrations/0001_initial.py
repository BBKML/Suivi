# Generated by Django 5.1.7 on 2025-03-09 16:28

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnneeAcademique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(message="L'année académique doit être au format 'AAAA-AAAA'.", regex='^\\d{4}-\\d{4}$')], verbose_name='Année académique')),
            ],
            options={
                'verbose_name': 'Année académique',
                'verbose_name_plural': 'Années académiques',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle_grade', models.CharField(max_length=100, unique=True, verbose_name='Libellé du grade')),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
            },
        ),
        migrations.CreateModel(
            name='NiveauEtude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle_niveau', models.CharField(max_length=100, unique=True, verbose_name='Libellé du niveau')),
            ],
            options={
                'verbose_name': "Niveau d'étude",
                'verbose_name_plural': "Niveaux d'étude",
            },
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_salle', models.CharField(max_length=100, unique=True, verbose_name='Nom de la salle')),
                ('capacite', models.IntegerField(default=30, verbose_name='Capacité de la salle')),
            ],
            options={
                'verbose_name': 'Salle',
                'verbose_name_plural': 'Salles',
            },
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle_semestre', models.CharField(max_length=100, unique=True, verbose_name='Libellé du semestre')),
            ],
            options={
                'verbose_name': 'Semestre',
                'verbose_name_plural': 'Semestres',
            },
        ),
        migrations.CreateModel(
            name='Statut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle_statut', models.CharField(max_length=100, unique=True, verbose_name='Libellé du statut')),
            ],
            options={
                'verbose_name': 'Statut',
                'verbose_name_plural': 'Statuts',
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'Féminin'), ('A', 'Autre')], max_length=1, null=True)),
                ('matricule', models.CharField(help_text="Identifiant unique de l'enseignant", max_length=50, unique=True, verbose_name='Matricule')),
                ('structure_origine', models.CharField(blank=True, max_length=255, null=True, verbose_name="Structure d'origine")),
                ('contact', models.CharField(help_text="Format : '+999999999'. Jusqu'à 15 chiffres.", max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Le format du numéro de contact est invalide.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Contact')),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enseignants', to='Suiv.anneeacademique', verbose_name='Année académique')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enseignants', to='Suiv.grade', verbose_name='Grade')),
                ('statut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enseignants', to='Suiv.statut', verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
            },
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_cours', models.CharField(max_length=50, unique=True, verbose_name='Code du cours')),
                ('intitule_ue', models.CharField(max_length=255, verbose_name="Intitulé de l'UE")),
                ('intitule_ecue', models.CharField(max_length=255, verbose_name="Intitulé de l'ECUE")),
                ('parcours', models.CharField(max_length=255, verbose_name='Parcours')),
                ('total_heures', models.FloatField(default=0, verbose_name='Total des heures')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours', to='Suiv.niveauetude', verbose_name="Niveau d'étude")),
                ('salle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cours', to='Suiv.salle', verbose_name='Salle')),
                ('semestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours', to='Suiv.semestre', verbose_name='Semestre')),
            ],
            options={
                'verbose_name': 'Cours',
                'verbose_name_plural': 'Cours',
            },
        ),
        migrations.CreateModel(
            name='SuiviEnseignement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_cours', models.DateField(verbose_name='Date du cours')),
                ('horaire_debut', models.TimeField(verbose_name='Heure de début')),
                ('horaire_fin', models.TimeField(verbose_name='Heure de fin')),
                ('heures_cm', models.FloatField(verbose_name="Nombre d'heures CM")),
                ('heures_td', models.FloatField(verbose_name="Nombre d'heures TD")),
                ('heures_tp', models.FloatField(verbose_name="Nombre d'heures TP")),
                ('nb_groupes', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre de Groupe')),
                ('total_heures_cumulees', models.FloatField(editable=False, verbose_name='Total des heures cumulées')),
                ('emargement_enseignant', models.BooleanField(default=False, verbose_name='Émargement enseignant')),
                ('emargement_delegue', models.BooleanField(default=False, verbose_name='Émargement délégué')),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivis', to='Suiv.anneeacademique', verbose_name='Année académique')),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivis', to='Suiv.cours', verbose_name='Cours')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivis', to='Suiv.enseignant', verbose_name='Enseignant')),
                ('salle_de_cours', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suivis', to='Suiv.salle', verbose_name='Salle de cours')),
            ],
            options={
                'verbose_name': "Suivi de l'enseignement",
                'verbose_name_plural': 'Suivis des enseignements',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='enseignant',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enseignant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Enseigner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enseignants', to='Suiv.cours', verbose_name='Cours')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours_enseignes', to='Suiv.enseignant', verbose_name='Enseignant')),
            ],
            options={
                'verbose_name': 'Enseignement',
                'verbose_name_plural': 'Enseignements',
                'constraints': [models.UniqueConstraint(fields=('enseignant', 'cours'), name='unique_enseignant_cours')],
            },
        ),
    ]
